{\rtf1\ansi\ansicpg1251\deff0\nouicompat{\fonttbl{\f0\fmodern JetBrains Mono;}{\f1\fnil\fcharset204 Calibri;}{\f2\fnil Arial;}{\f3\fnil\fcharset0 Calibri;}}
{\colortbl ;\red207\green142\blue109;\red188\green190\blue196;\red42\green172\blue184;\red106\green171\blue115;\red122\green126\blue133;\red178\green0\blue178;\red148\green85\blue141;\red86\green168\blue245;\red136\green136\blue198;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf1\f0\fs20\lang1049 import \cf2 pygame\line\cf1 from \cf2 pygame \cf1 import \cf2 *\line\line WIN_WIDTH = \cf3 1920\line\cf2 WIN_HEIGHT = \cf3 1080\line\cf2 DISPLAY = (WIN_WIDTH, WIN_HEIGHT)\line BACKGROUND_COLOR = \cf4 "#000080"\line\cf2 PLATFORM_WIDTH = \cf3 32\line\cf2 PLATFORM_HEIGHT = \cf3 32\line\cf2 PLATFORM_COLOR = \cf4 "#808080"\line\cf2 MOVE_SPEED = \cf3 7.3333333337\line\cf2 WIDTH = \cf3 25\line\cf2 HEIGHT = \cf3 25\line\cf2 COLOR = (\cf4 "#808080"\cf2 )\line JUMP_POWER = \cf3 7\line\cf2 GRAVITY = \cf3 0.1  \cf5 # \f1\'d1\'e8\'eb\'e0\f0 , \f1\'ea\'ee\'f2\'ee\'f0\'e0\'ff\f0  \f1\'e1\'f3\'e4\'e5\'f2\f0  \f1\'f2\'ff\'ed\'f3\'f2\'fc\f0  \f1\'ed\'e0\'f1\f0  \f1\'e2\'ed\'e8\'e7\f0\line\line\line\cf1 class \cf2 Player(sprite.Sprite):\line     \cf1 def \cf6 __init__\cf2 (\cf7 self\cf2 , x, y):\line         sprite.Sprite.\cf6 __init__\cf2 (\cf7 self\cf2 )\line         \cf7 self\cf2 .yvel = \cf3 0  \cf5 # \f1\'f1\'ea\'ee\'f0\'ee\'f1\'f2\'fc\f0  \f1\'e2\'e5\'f0\'f2\'e8\'ea\'e0\'eb\'fc\'ed\'ee\'e3\'ee\f0  \f1\'ef\'e5\'f0\'e5\'ec\'e5\'f9\'e5\'ed\'e8\'ff\f0\line         \cf7 self\cf2 .onGround = \cf1 False  \cf5 # \f1\'cd\'e0\f0  \f1\'e7\'e5\'ec\'eb\'e5\f0  \f1\'eb\'e8\f0  \f1\'ff\f0 ?\line         \cf7 self\cf2 .xvel = \cf3 0  \cf5 # \f1\'f1\'ea\'ee\'f0\'ee\'f1\'f2\'fc\f0  \f1\'ef\'e5\'f0\'e5\'ec\'e5\'f9\'e5\'ed\'e8\'ff\f0 . 0 - \f1\'f1\'f2\'ee\'ff\'f2\'fc\f0  \f1\'ed\'e0\f0  \f1\'ec\'e5\'f1\'f2\'e5\f0\line         \cf7 self\cf2 .startX = x  \cf5 # \f1\'cd\'e0\'f7\'e0\'eb\'fc\'ed\'e0\'ff\f0  \f1\'ef\'ee\'e7\'e8\'f6\'e8\'ff\f0  \f1\'d5\f0 , \f1\'ef\'f0\'e8\'e3\'ee\'e4\'e8\'f2\'f1\'ff\f0  \f1\'ea\'ee\'e3\'e4\'e0\f0  \f1\'e1\'f3\'e4\'e5\'ec\f0  \f1\'ef\'e5\'f0\'e5\'e8\'e3\'f0\'fb\'e2\'e0\'f2\'fc\f0  \f1\'f3\'f0\'ee\'e2\'e5\'ed\'fc\f0\line         \cf7 self\cf2 .startY = y\line         \cf7 self\cf2 .image = Surface((WIDTH, HEIGHT))\line         \cf7 self\cf2 .image.fill(Color(COLOR))\line         \cf7 self\cf2 .rect = Rect(x, y, WIDTH, HEIGHT)  \cf5 # \f1\'ef\'f0\'ff\'ec\'ee\'f3\'e3\'ee\'eb\'fc\'ed\'fb\'e9\f0  \f1\'ee\'e1\'fa\'e5\'ea\'f2\f0\line\line     \cf1 def \cf8 update\cf2 (\cf7 self\cf2 , left, right, up, platforms):\line         \cf1 if \cf2 up:\line             \cf1 if \cf7 self\cf2 .onGround:  \cf5 # \f1\'ef\'f0\'fb\'e3\'e0\'e5\'ec\f0 , \f1\'f2\'ee\'eb\'fc\'ea\'ee\f0  \f1\'ea\'ee\'e3\'e4\'e0\f0  \f1\'ec\'ee\'e6\'e5\'ec\f0  \f1\'ee\'f2\'f2\'ee\'eb\'ea\'ed\'f3\'f2\'fc\'f1\'ff\f0  \f1\'ee\'f2\f0  \f1\'e7\'e5\'ec\'eb\'e8\f0\line                 \cf7 self\cf2 .yvel = -JUMP_POWER\line         \cf1 if \cf2 left:\line             \cf7 self\cf2 .xvel = -MOVE_SPEED  \cf5 # \f1\'cb\'e5\'e2\'ee\f0  = x- n\line\line         \cf1 if \cf2 right:\line             \cf7 self\cf2 .xvel = MOVE_SPEED  \cf5 # \f1\'cf\'f0\'e0\'e2\'ee\f0  = x + n\line\line         \cf1 if not \cf2 (left \cf1 or \cf2 right):  \cf5 # \f1\'f1\'f2\'ee\'e8\'ec\f0 , \f1\'ea\'ee\'e3\'e4\'e0\f0  \f1\'ed\'e5\'f2\f0  \f1\'f3\'ea\'e0\'e7\'e0\'ed\'e8\'e9\f0  \f1\'e8\'e4\'f2\'e8\f0\line             \cf7 self\cf2 .xvel = \cf3 0\line         \cf1 if not \cf7 self\cf2 .onGround:\line             \cf7 self\cf2 .yvel += GRAVITY\line         \cf7 self\cf2 .onGround = \cf1 False\line         \cf7 self\cf2 .rect.y += \cf7 self\cf2 .yvel\line         \cf7 self\cf2 .collide(\cf3 0\cf2 , \cf7 self\cf2 .yvel, platforms)\line\line         \cf7 self\cf2 .rect.x += \cf7 self\cf2 .xvel\line         \cf7 self\cf2 .collide(\cf7 self\cf2 .xvel, \cf3 0\cf2 , platforms)\line\line     \cf1 def \cf8 collide\cf2 (\cf7 self\cf2 , xvel, yvel, platforms):\line         \cf1 for \cf2 p \cf1 in \cf2 platforms:\line             \cf1 if \cf2 sprite.collide_rect(\cf7 self\cf2 , p):  \cf5 # \f1\'e5\'f1\'eb\'e8\f0  \f1\'e5\'f1\'f2\'fc\f0  \f1\'ef\'e5\'f0\'e5\'f1\'e5\'f7\'e5\'ed\'e8\'e5\f0  \f1\'ef\'eb\'e0\'f2\'f4\'ee\'f0\'ec\'fb\f0  \f1\'f1\f0  \f1\'e8\'e3\'f0\'ee\'ea\'ee\'ec\f0\line                 \cf1 if \cf2 xvel > \cf3 0\cf2 :  \cf5 # \f1\'e5\'f1\'eb\'e8\f0  \f1\'e4\'e2\'e8\'e6\'e5\'f2\'f1\'ff\f0  \f1\'e2\'ef\'f0\'e0\'e2\'ee\f0\line                     \cf7 self\cf2 .rect.right = p.rect.left  \cf5 # \f1\'f2\'ee\f0  \f1\'ed\'e5\f0  \f1\'e4\'e2\'e8\'e6\'e5\'f2\'f1\'ff\f0  \f1\'e2\'ef\'f0\'e0\'e2\'ee\f0\line                 \cf1 if \cf2 xvel < \cf3 0\cf2 :  \cf5 # \f1\'e5\'f1\'eb\'e8\f0  \f1\'e4\'e2\'e8\'e6\'e5\'f2\'f1\'ff\f0  \f1\'e2\'eb\'e5\'e2\'ee\f0\line                     \cf7 self\cf2 .rect.left = p.rect.right  \cf5 # \f1\'f2\'ee\f0  \f1\'ed\'e5\f0  \f1\'e4\'e2\'e8\'e6\'e5\'f2\'f1\'ff\f0  \f1\'e2\'eb\'e5\'e2\'ee\f0\line                 \cf1 if \cf2 yvel > \cf3 0\cf2 :  \cf5 # \f1\'e5\'f1\'eb\'e8\f0  \f1\'ef\'e0\'e4\'e0\'e5\'f2\f0  \f1\'e2\'ed\'e8\'e7\f0\line                     \cf7 self\cf2 .rect.bottom = p.rect.top  \cf5 # \f1\'f2\'ee\f0  \f1\'ed\'e5\f0  \f1\'ef\'e0\'e4\'e0\'e5\'f2\f0  \f1\'e2\'ed\'e8\'e7\f0\line                     \cf7 self\cf2 .onGround = \cf1 True  \cf5 # \f1\'e8\f0  \f1\'f1\'f2\'e0\'ed\'ee\'e2\'e8\'f2\'f1\'ff\f0  \f1\'ed\'e0\f0  \f1\'f7\'f2\'ee\f0 -\f1\'f2\'ee\f0  \f1\'f2\'e2\'e5\'f0\'e4\'ee\'e5\f0\line                     \cf7 self\cf2 .yvel = \cf3 0  \cf5 # \f1\'e8\f0  \f1\'fd\'ed\'e5\'f0\'e3\'e8\'ff\f0  \f1\'ef\'e0\'e4\'e5\'ed\'e8\'ff\f0  \f1\'ef\'f0\'ee\'ef\'e0\'e4\'e0\'e5\'f2\f0\line                 \cf1 if \cf2 yvel < \cf3 0\cf2 :  \cf5 # \f1\'e5\'f1\'eb\'e8\f0  \f1\'e4\'e2\'e8\'e6\'e5\'f2\'f1\'ff\f0  \f1\'e2\'e2\'e5\'f0\'f5\f0\line                     \cf7 self\cf2 .rect.top = p.rect.bottom  \cf5 # \f1\'f2\'ee\f0  \f1\'ed\'e5\f0  \f1\'e4\'e2\'e8\'e6\'e5\'f2\'f1\'ff\f0  \f1\'e2\'e2\'e5\'f0\'f5\f0\line                     \cf7 self\cf2 .yvel = \cf3 0  \cf5 # \f1\'e8\f0  \f1\'fd\'ed\'e5\'f0\'e3\'e8\'ff\f0  \f1\'ef\'f0\'fb\'e6\'ea\'e0\f0  \f1\'ef\'f0\'ee\'ef\'e0\'e4\'e0\'e5\'f2\f0\line\line\line\cf1 class \cf2 Platform(sprite.Sprite):\line     \cf1 def \cf6 __init__\cf2 (\cf7 self\cf2 , x, y):\line         sprite.Sprite.\cf6 __init__\cf2 (\cf7 self\cf2 )\line         \cf7 self\cf2 .image = Surface((PLATFORM_WIDTH, PLATFORM_HEIGHT))\line         \cf7 self\cf2 .image.fill(Color(PLATFORM_COLOR))\line         \cf7 self\cf2 .rect = Rect(x, y, PLATFORM_WIDTH, PLATFORM_HEIGHT)\line\line\line\cf1 def \cf8 main\cf2 ():\line     hero = Player(\cf3 456\cf2 , \cf3 290\cf2 )  \cf5 # \f1\'f1\'ee\'e7\'e4\'e0\'e5\'ec\f0  \f1\'e3\'e5\'f0\'ee\'ff\f0  \f1\'ef\'ee\f0  (x,y) \f1\'ea\'ee\'ee\'f0\'e4\'e8\'ed\'e0\'f2\'e0\'ec\f0\line     \cf2 left = right = \cf1 False  \cf5 # \f1\'ef\'ee\f0  \f1\'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe\f0  \f2\emdash\f0  \f1\'f1\'f2\'ee\'e8\'ec\f0\line     \cf2 up = \cf1 False\line     \cf2 entities = pygame.sprite.Group()  \cf5 # \f1\'c2\'f1\'e5\f0  \f1\'ee\'e1\'fa\'e5\'ea\'f2\'fb\f0\line     \cf2 platforms = []  \cf5 # \f1\'f2\'ee\f0 , \f1\'e2\'ee\f0  \f1\'f7\'f2\'ee\f0  \f1\'ec\'fb\f0  \f1\'e1\'f3\'e4\'e5\'ec\f0  \f1\'e2\'f0\'e5\'e7\'e0\'f2\'fc\'f1\'ff\f0  \f1\'e8\'eb\'e8\f0  \f1\'ee\'ef\'e8\'f0\'e0\'f2\'fc\'f1\'ff\f0\line     \cf2 entities.add(hero)\line     level = [\line         \cf4 "------------------------------------------------------------"\cf2 ,\line         \cf4 "-                                                          -"\cf2 ,\line         \cf4 "-                                                          -"\cf2 ,\line         \cf4 "-                                                          -"\cf2 ,\line         \cf4 "-     -----     -----     -----    -----     --            -"\cf2 ,\line         \cf4 "-     -    -   -         -     -   -    -    --            -"\cf2 ,\line         \cf4 "-     -----     -----    -     -   -    -    --            -"\cf2 ,\line         \cf4 "-     -    -         -   -     -   -    -                  -"\cf2 ,\line         \cf4 "-     -----     -----     -----    -----     --            -"\cf2 ,\line         \cf4 "-                                                          -"\cf2 ,\line         \cf4 "-   ------------ ------------- ---- --- - ------------ -   -"\cf2 ,\line         \cf4 "-                                                          -"\cf2 ,\line         \cf4 "-   ---------------------- --------- - --- -------------   -"\cf2 ,\line         \cf4 "-                                                          -"\cf2 ,\line         \cf4 "-   -------------------------- - ------------------- ---   -"\cf2 ,\line         \cf4 "-                                                          -"\cf2 ,\line         \cf4 "-   ---------------- --------- ----------------------- -   -"\cf2 ,\line         \cf4 "-                                                          -"\cf2 ,\line         \cf4 "-   - ---- ------------- -- ------------- -- ----- -----   -"\cf2 ,\line         \cf4 "-                                                          -"\cf2 ,\line         \cf4 "-     -- - ---- ---- -------------------- - ---- --- -     -"\cf2 ,\line         \cf4 "-                                                          \cf2 -\cf4 ",\line         "-    --  -   -                                             -"\cf2 ,\line         \cf4 "-   -  -  - -   -   -   -   -   -   -   -                  -"\cf2 ,\line         \cf4 "-   -  -   -   - - - - - - - - - - - - - -                 -"\cf2 ,\line         \cf4 "-   -  -  - -  - - - - - - - - - - - - - -                 -"\cf2 ,\line         \cf4 "-    --  -   -  -   -   -   -   -   -   -                  -"\cf2 ,\line         \cf4 "-                                                          -"\cf2 ,\line         \cf4 "-                                                          -"\cf2 ,\line         \cf4 "-                                                          -"\cf2 ,\line         \cf4 "-                                                          -"\cf2 ,\line         \cf4 "-                                                          -"\cf2 ,\line         \cf4 "-                                                          -"\cf2 ,\line         \cf4 "------------------------------------------------------------"\cf2 ]\line     timer = pygame.time.Clock()\line     x = y = \cf3 0  \cf5 # \f1\'ea\'ee\'ee\'f0\'e4\'e8\'ed\'e0\'f2\'fb\f0\line     \cf1 for \cf2 row \cf1 in \cf2 level:  \cf5 # \f1\'e2\'f1\'ff\f0  \f1\'f1\'f2\'f0\'ee\'ea\'e0\f0\line         \cf1 for \cf2 col \cf1 in \cf2 row:  \cf5 # \f1\'ea\'e0\'e6\'e4\'fb\'e9\f0  \f1\'f1\'e8\'ec\'e2\'ee\'eb\f0\line             \cf1 if \cf2 col == \cf4 "-"\cf2 :\line                 pf = Platform(x, y)\line\line                 entities.add(pf)\line                 platforms.append(pf)\line\line             x += PLATFORM_WIDTH  \cf5 # \f1\'e1\'eb\'ee\'ea\'e8\f0  \f1\'ef\'eb\'e0\'f2\'f4\'ee\'f0\'ec\'fb\f0  \f1\'f1\'f2\'e0\'e2\'ff\'f2\'f1\'ff\f0  \f1\'ed\'e0\f0  \f1\'f8\'e8\'f0\'e8\'ed\'e5\f0  \f1\'e1\'eb\'ee\'ea\'ee\'e2\f0\line         \cf2 y += PLATFORM_HEIGHT  \cf5 # \f1\'f2\'ee\f0  \f1\'e6\'e5\f0  \f1\'f1\'e0\'ec\'ee\'e5\f0  \f1\'e8\f0  \f1\'f1\f0  \f1\'e2\'fb\'f1\'ee\'f2\'ee\'e9\f0\line         \cf2 x = \cf3 0\line     \cf2 pygame.init()\line     screen = pygame.display.set_mode(DISPLAY)\line     pygame.display.set_caption(\cf4 "\f1\'cf\'eb\'e0\'f2\'f4\'ee\'f0\'ec\'e5\'f0\f0 "\cf2 )\line     bg = Surface((WIN_WIDTH, WIN_HEIGHT))\line     bg.fill(Color(BACKGROUND_COLOR))\line\line     \cf1 while \cf3 1\cf2 :\line         timer.tick(\cf3 60\cf2 )\line         \cf1 for \cf2 e \cf1 in \cf2 pygame.event.get():\line             \cf1 if \cf2 e.type == QUIT:\line                 \cf1 raise \cf9 SystemExit\line             \cf1 if \cf2 e.type == KEYDOWN \cf1 and \cf2 e.key == K_LEFT:\line                 left = \cf1 True\line             if \cf2 e.type == KEYDOWN \cf1 and \cf2 e.key == K_RIGHT:\line                 right = \cf1 True\line\line             if \cf2 e.type == KEYUP \cf1 and \cf2 e.key == K_RIGHT:\line                 right = \cf1 False\line             if \cf2 e.type == KEYUP \cf1 and \cf2 e.key == K_LEFT:\line                 left = \cf1 False\line             if \cf2 e.type == KEYDOWN \cf1 and \cf2 e.key == K_UP:\line                 up = \cf1 True\line             if \cf2 e.type == KEYUP \cf1 and \cf2 e.key == K_UP:\line                 up = \cf1 False\line         \cf2 screen.blit(bg, (\cf3 0\cf2 , \cf3 0\cf2 ))\line\line         hero.update(left, right, up, platforms)  \cf5 # \f1\'ef\'e5\'f0\'e5\'e4\'e2\'e8\'e6\'e5\'ed\'e8\'e5\f0\line         \cf2 entities.draw(screen)\line         pygame.display.update()\line\line\line\cf1 if \cf2 __name__ == \cf4 "__main__"\cf2 :\line     main()\line     \cf5 #Demo build, on a working code.\line\par

\pard\sa200\sl276\slmult1\cf0\f3\fs22\lang9\par
}
 